{"ast":null,"code":"var _jsxFileName = \"/home/jhlee/workspace/chat/insta-chat/client/src/Components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"../Infobar/Infobar\";\nimport Input from \"../Input/Input\";\nimport \"./Chat.css\";\nimport Messages from \"../Messages/Messages\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport { connect, sendMsg } from '../../Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Chat({\n  location\n}) {\n  _s();\n\n  const ENDPOINT = \"http://127.0.0.1:8080\";\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    /*\n    socket = io(ENDPOINT);\n    const { name, room } = queryString.parse(location.search);\n     setRoom(room);\n    setName(name);\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) alert(error);\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n    */\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setRoom(room);\n    setName(name);\n    connect(message => {\n      console.log(\"Start Callback Function\");\n      setMessages([...messages, message]);\n      console.log(\"Add \", msg.data, \" to `chatHistory` array\");\n    });\n  }, [ENDPOINT, location.search]);\n  /*\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n   useEffect(() => {\n    socket.on(\"roomData\", ({users}) =>{\n      setUsers(users)\n    });\n  },[])\n   function sendMessage(event) {\n    event.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => {\n        setMessage(\"\");\n      });\n    }\n  }\n  */\n\n  function sendMessage(event) {\n    if (event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        sendMessage: sendMessage,\n        setMessage: setMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"2ZmgzERPMJzMqhXhBT0gGT1vHi4=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/jhlee/workspace/chat/insta-chat/client/src/Components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","TextContainer","connect","sendMsg","socket","Chat","location","ENDPOINT","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","parse","search","console","log","msg","data","sendMessage","event","keyCode","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"../Infobar/Infobar\";\nimport Input from \"../Input/Input\";\nimport \"./Chat.css\";\nimport Messages from \"../Messages/Messages\";\nimport TextContainer from \"../TextContainer/TextContainer\"\n\nimport { connect, sendMsg } from '../../Api';\n\nlet socket;\n\nfunction Chat({ location }) {\n  const ENDPOINT = \"http://127.0.0.1:8080\";\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    /*\n    socket = io(ENDPOINT);\n    const { name, room } = queryString.parse(location.search);\n\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) alert(error);\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n    */\n    const { name, room } = queryString.parse(location.search);\n\n    setRoom(room);\n    setName(name);\n\n    connect((message) => {\n        console.log(\"Start Callback Function\")\n        setMessages([...messages, message]);\n        console.log(\"Add \", msg.data, \" to `chatHistory` array\");\n    });\n\n  }, [ENDPOINT, location.search]);\n\n  /*\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  useEffect(() => {\n    socket.on(\"roomData\", ({users}) =>{\n      setUsers(users)\n    });\n  },[])\n\n  function sendMessage(event) {\n    event.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => {\n        setMessage(\"\");\n      });\n    }\n  }\n  */\n\n  function sendMessage(event) {\n    if (event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n  }\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name} />\n        <Input\n          message={message}\n          sendMessage={sendMessage}\n          setMessage={setMessage}\n        ></Input>\n      </div>\n      <TextContainer users = {users} />\n\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}