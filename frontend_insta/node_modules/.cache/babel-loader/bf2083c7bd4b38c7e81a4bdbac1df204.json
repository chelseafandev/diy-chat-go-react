{"ast":null,"code":"var _jsxFileName = \"/home/jhlee/workspace/chat/insta-chat/client/src/Components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"../Infobar/Infobar\";\nimport Input from \"../Input/Input\";\nimport \"./Chat.css\";\nimport Messages from \"../Messages/Messages\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction Chat({\n  location\n}) {\n  _s();\n\n  const ENDPOINT = \"http://127.0.0.1:8080\";\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]); // useEffect 안에서 사용하는 상태나, props 가 있다면, useEffect 의 deps 에 넣어주어야 합니다. 그렇게 하는게, 규칙입니다.\n  // 만약 useEffect 안에서 사용하는 상태나 props 를 deps 에 넣지 않게 된다면 useEffect 에 등록한 함수가 실행 될 때,\n  // 최신 props/상태를 가르키지 않게 됩니다.\n\n  useEffect(() => {\n    // 컴포넌트가 화면에서 나타남\n    socket = new WebSocket(\"ws://localhost:8080/ws\");\n    console.log(\"socket create...\");\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setRoom(room);\n    setName(name);\n    console.log(\"room: %s, name: %s\", room, name);\n\n    socket.onopen = function (event) {\n      console.log(\"[onopen] successfully connected...\");\n      socket.send(JSON.stringify({\n        type: \"join\",\n        user: name,\n        text: \"join\"\n      }));\n    }; // 컴포넌트가 화면에서 사라짐\n\n\n    return () => {\n      socket.close(1000, \"socket close...\");\n      console.log(\"socket close...\");\n    };\n  }, [location.search]);\n  useEffect(() => {\n    socket.onmessage = function (event) {\n      const {\n        name,\n        room\n      } = queryString.parse(location.search);\n      const data = JSON.parse(event.data);\n      console.log(\"[onmessage] received message...\");\n\n      switch (data.type) {\n        case \"message\":\n          setMessages(messages => [...messages, data]);\n          break;\n\n        case \"admin\":\n          setMessages(messages => [...messages, data]);\n          break;\n\n        default:\n          break;\n      }\n    };\n  }, [messages, location.search]);\n\n  function sendMessage(event) {\n    event.preventDefault();\n\n    if (message) {\n      socket.send(message);\n      setMessage(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        sendMessage: sendMessage,\n        setMessage: setMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"02o8zN4s2pPHz/oSyXI1+3VEWVo=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/jhlee/workspace/chat/insta-chat/client/src/Components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","TextContainer","socket","Chat","location","ENDPOINT","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","WebSocket","console","log","parse","search","onopen","event","send","JSON","stringify","type","user","text","close","onmessage","data","sendMessage","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from \"../Infobar/Infobar\";\nimport Input from \"../Input/Input\";\nimport \"./Chat.css\";\nimport Messages from \"../Messages/Messages\";\nimport TextContainer from \"../TextContainer/TextContainer\"\n\nlet socket;\n\nfunction Chat({ location }) {\n    const ENDPOINT = \"http://127.0.0.1:8080\";\n    const [name, setName] = useState(\"\");\n    const [room, setRoom] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [users, setUsers] = useState([]);\n\n    // useEffect 안에서 사용하는 상태나, props 가 있다면, useEffect 의 deps 에 넣어주어야 합니다. 그렇게 하는게, 규칙입니다.\n    // 만약 useEffect 안에서 사용하는 상태나 props 를 deps 에 넣지 않게 된다면 useEffect 에 등록한 함수가 실행 될 때,\n    // 최신 props/상태를 가르키지 않게 됩니다.\n    useEffect(() => {\n        // 컴포넌트가 화면에서 나타남\n        socket = new WebSocket(\"ws://localhost:8080/ws\");\n        console.log(\"socket create...\");\n        \n        const { name, room } = queryString.parse(location.search);    \n        setRoom(room);\n        setName(name);\n        console.log(\"room: %s, name: %s\", room, name);\n        \n        socket.onopen = function(event) {\n            console.log(\"[onopen] successfully connected...\");\n            socket.send(\n                JSON.stringify({\n                    type: \"join\",\n                    user: name,\n                    text: \"join\",\n                })\n            );\n        };\n\n        // 컴포넌트가 화면에서 사라짐\n        return () => {\n            socket.close(1000, \"socket close...\");\n            console.log(\"socket close...\");\n        };\n    }, [location.search]);\n\n    useEffect(() => {\n        socket.onmessage = function(event) {\n            const { name, room } = queryString.parse(location.search);\n\n            const data = JSON.parse(event.data);\n            console.log(\"[onmessage] received message...\");\n            \n            switch (data.type) {\n                case \"message\":\n                    setMessages((messages) => [...messages, data]);\n                    break;\n                case \"admin\":\n                    setMessages((messages) => [...messages, data]);\n                    break;\n                default:\n                    \n                    break;\n            }\n\n            \n        };\n    }, [messages, location.search]);\n\n    function sendMessage(event) {\n        event.preventDefault();\n        if (message) {\n            socket.send(message);\n            setMessage(\"\");\n        }\n    }\n\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room={room} />\n                <Messages messages={messages} name={name} />\n                <Input\n                    message={message}\n                    sendMessage={sendMessage}\n                    setMessage={setMessage}\n                ></Input>\n            </div>\n            <TextContainer users = {users} />\n        </div>\n    );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}