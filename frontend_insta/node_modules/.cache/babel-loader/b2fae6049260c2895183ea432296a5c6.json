{"ast":null,"code":"var socket = new WebSocket(\"ws://localhost:8080/ws\");\n\nlet connect = cb => {\n  console.log(\"connecting\");\n\n  socket.onopen = () => {\n    console.log(\"[onopen] Successfully Connected\");\n  };\n\n  socket.onmessage = msg => {\n    console.log(\"[onmessage] Received Message: \", msg.data);\n    cb(msg);\n  };\n\n  socket.onclose = event => {\n    console.log(\"[onclose] Socket Closed Connection: \", event);\n  };\n\n  socket.onerror = error => {\n    console.log(\"[onerror] Socket Error: \", error);\n  };\n};\n\nlet sendMsg = msg => {\n  console.log(\"sending msg: \", msg);\n  socket.send(msg);\n};\n\nexport { connect, sendMsg };","map":{"version":3,"sources":["/home/jhlee/workspace/chat/insta-chat/client/src/Api/index.js"],"names":["socket","WebSocket","connect","cb","console","log","onopen","onmessage","msg","data","onclose","event","onerror","error","sendMsg","send"],"mappings":"AAAA,IAAIA,MAAM,GAAG,IAAIC,SAAJ,CAAc,wBAAd,CAAb;;AAEA,IAAIC,OAAO,GAAGC,EAAE,IAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAEAL,EAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GAFD;;AAIAL,EAAAA,MAAM,CAACO,SAAP,GAAmBC,GAAG,IAAI;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAAG,CAACC,IAAlD;AACAN,IAAAA,EAAE,CAACK,GAAD,CAAF;AACH,GAHD;;AAKAR,EAAAA,MAAM,CAACU,OAAP,GAAiBC,KAAK,IAAI;AACtBP,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDM,KAApD;AACH,GAFD;;AAIAX,EAAAA,MAAM,CAACY,OAAP,GAAiBC,KAAK,IAAI;AACtBT,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCQ,KAAxC;AACH,GAFD;AAGH,CAnBD;;AAqBA,IAAIC,OAAO,GAAGN,GAAG,IAAI;AACjBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,GAA7B;AACAR,EAAAA,MAAM,CAACe,IAAP,CAAYP,GAAZ;AACH,CAHD;;AAKA,SAASN,OAAT,EAAkBY,OAAlB","sourcesContent":["var socket = new WebSocket(\"ws://localhost:8080/ws\");\n\nlet connect = cb => {\n    console.log(\"connecting\");\n\n    socket.onopen = () => {\n        console.log(\"[onopen] Successfully Connected\");\n    };\n\n    socket.onmessage = msg => {\n        console.log(\"[onmessage] Received Message: \", msg.data);\n        cb(msg);\n    };\n\n    socket.onclose = event => {\n        console.log(\"[onclose] Socket Closed Connection: \", event);\n    };\n\n    socket.onerror = error => {\n        console.log(\"[onerror] Socket Error: \", error);\n    };\n};\n\nlet sendMsg = msg => {\n    console.log(\"sending msg: \", msg);\n    socket.send(msg);\n};\n\nexport { connect, sendMsg };"]},"metadata":{},"sourceType":"module"}